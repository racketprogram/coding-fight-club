extends layout

block content
  .matchPageSections
    .titleSection
      .matchQuestion Two Sum
      .opponent Opponent: Ethan
      .level Level: Easy
      .timer#timer
        img.timerImg(src='../img/clock.png')
        div
        label#hours 00
        div :
        label#minutes 00
        div :
        label#seconds 00
        div
      button#submitBtn(type='button' onclick='') Submit
      button#helpBtn(type='button' onclick='') Help
      button#exitBtn(type='button' onclick='exitMatch()') Exit
    .contentSection
      .leftSection
        .questionArea
          .sectionName Question
          #question Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice.
   

        .opponentTerminal
          .sectionName Opponent's Test Output
          #opponentRunCodeResult I'm the result

      .rightSection
        .codearea
          .sectionName Your Solution
          textarea#codearea(rows='25' cols='200') var twoSum = function(nums, target) {};
        .terminalResult 
          button#testcaseBtn(type='button' onclick='showTestCase()') Test Case
          button#runcodeBtn(type='button' onclick='runCode()') Run Code    
          #runCodeResult
          #testCaseArea
            textarea#testcase(rows='5' cols='200')

  script(src='https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.48.4/codemirror.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.48.4/mode/javascript/javascript.js')
  script(src='../js/match.js')

  script.
    // codemirror (syntax highlight & auto indent)
    const codemirrorEditor = CodeMirror.fromTextArea(document.getElementById('codearea'), {
      lineNumbers: true,
      mode: "javascript",
      theme: "base16-dark"
    });

    // timer
    let hoursLabel = document.getElementById("hours");
    let minutesLabel = document.getElementById("minutes");
    let secondsLabel = document.getElementById("seconds");
    let totalSeconds = 0;
    setInterval(setTime(totalSeconds, hoursLabel, minutesLabel, secondsLabel), 1000);

    function setTime(totalSeconds, hoursLabel, minutesLabel, secondsLabel) {
      return () => {
        totalSeconds = totalSeconds + 1;
        secondsLabel.innerHTML = pad(totalSeconds % 60);
        minutesLabel.innerHTML = pad(parseInt((totalSeconds % 3600) / 60));
        hoursLabel.innerHTML = pad(parseInt(totalSeconds / 3600))
      }
    }

    function pad(val) {
      let valString = val + "";
      if (valString.length < 2) {
        return "0" + valString;
      } else {
        return valString;
      }
    }
