extends layout

block content

  .matchPageSections Set up a Match
    .contentSection
      .leftSection
        .chooseOpponent Choose an Opponent
        br
        .strangerMode Challenge a random stranger online (顯示線上對手們)
        br
        .friendMode Invite a friend
        button.getLinkBtn(type='button' onclick='getLink()') Get match invitation link
        #invitationLink
      .rightSection
        .chooseQuestion Choose a question
        br
        | Category 
        select#category(name='category')
          option(value='algorithms') Algorithms
          option(value='database') Database
          option(value='shell') Shell
          option(value='concurrency') Concurrency
        br
        br
        | Difficulty 
        select#difficulty(name='difficulty')
          option(value='easy') Easy
          option(value='medium') Medium
          option(value='hard') Hard
        br
        //- button.questionSetup#questionSetup(value='Two Sum') Two Sum
    
    br
    br
    br
    div Temp setup: use username, question set as Two Sum
    br
    button#readyBtn(type='button' onclick='setUpAMatch()') I'm ready!

  script(src='../js/match_setup.js')

    //- .titleSection
    //-   .matchQuestion CycleRotation
    //-   .opponent Opponent: Ethan
    //-   .level Level: Easy
    //-   .timer Time: XX:XX
    //-   button#submitBtn(type='button' onclick='') Submit
    //-   button#helpBtn(type='button' onclick='') Help
    //-   button#exitBtn(type='button' onclick='exitMatch()') Exit
    //- .contentSection
    //-   .leftSection
    //-     .questionArea
    //-       .sectionName Question
    //-       #question Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice.
   

    //-     .opponentTerminal
    //-       .sectionName Opponent's Test Output
    //-       #opponentRunCodeResult I'm the result

    //-   .rightSection
    //-     .codearea
    //-       .sectionName Your Solution
    //-       textarea#codearea(rows='25' cols='200')
    //-     .terminalResult 
    //-       button#testcaseBtn(type='button' onclick='showTestCase()') Test Case
    //-       button#runcodeBtn(type='button' onclick='runCode()') Run Code    
    //-       #runCodeResult
    //-       #testCaseArea
    //-         textarea#testcase(rows='5' cols='200')


    







